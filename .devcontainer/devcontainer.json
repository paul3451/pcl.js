// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.155.1/containers/typescript-node
{
  "name": "Node.js & TypeScript",
  "build": {
    "dockerfile": "Dockerfile",
    "args": {
      "VARIANT": "16-buster"
    }
  },
  // Set *default* container specific settings.json values on container create.
  "settings": {},
  // Add the IDs of extensions you want installed when the container is created.
  "customizations": {
    // Configure properties specific to VS Code.
    "vscode": {
      // Add the IDs of extensions you want installed when the container is created.
      "extensions": [
        "dbaeumer.vscode-eslint",
        "ms-vscode.cpptools-extension-pack",
        "esbenp.prettier-vscode"
      ]
    }
  },
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],
  // Use 'postCreateCommand' to run commands after the container is created.
  // We use `npm ci` instead of `npm install` because we want to respect the lockfile and ONLY the lockfile.
  // That way, our devcontainer is more reproducible. --Taytay
  // "postCreateCommand": "npm ci",
  // Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "root",
  "postCreateCommand": "npm install --global yarn && git submodule update --init --recursive --remote && git config --global --add --bool push.autoSetupRemote true && yarn setup"
}
